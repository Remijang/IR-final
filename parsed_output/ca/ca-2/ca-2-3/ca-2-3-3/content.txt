2.3.3 Bias-Based Approach

Let us adopt a different approach now. Let us assume that the unsigned representation of a number  is given by:

Here, bias is a constant.

Let us consider several examples using a 4-bit number system. The range of unsigned numbers is from 0 to 15. Let the bias be equal to 7. Then, the actual range of the number system is from -7 to  . Note that this method avoids some pitfalls of the sign-magnitude and 1â€™s complement approach. First, there is only one representation for 0. In this case it is 0111. Second, it is possible to use standard unsigned binary addition to add two numbers with a small modification.

Let us try to add 2 and -2. 2 is represented as  or  . Likewise, -2, is represented as  , or  . If we add 2 and -2, we are in effect adding the unsigned numbers 5 and 9.   . This is not the right answer. The right answer should be 0, and it should be represented as 0111 or  . Nonetheless, we can get the right answer by subtracting the bias, i.e., 7. 14 - 7  . Hence, the algorithm for addition is to perform simple binary unsigned addition, and then subtract the bias. Performing simple binary subtraction is also easy (need to add the bias). Hence, in the case of addition, for two numbers,  and  , we have:

However, performing binary multiplication is difficult. The bias values will create issues. In this case, if the real value of a number is  , we are representing it as  . If we multiply  and  naively, we are in effect multiplying  and  . To recover the correct result,  , from  is difficult. We desire an even simpler representation.