2.1.7 The Road Ahead

Way Point 2

• Boolean algebra is a symbolic algebra that uses Boolean variables, which can be either 0 or 1.   
• The basic Boolean operators are AND, OR, and NOT.   
These operators are associative, commutative, and reflexive.   
• NAND, NOR, XOR are very useful Boolean operators.   
• De Morgan’s laws help convert an expression with an AND operator, to an expression that replaces it with an OR operator.   
• A logic gate is a physical realization of a simple Boolean operator or function.   
• Our aim is to minimize the number of logic gates while designing a circuit for a Boolean function.   
• One effective way of minimizing the number of logic gates is by using Karnaugh maps.

Up till now, we have learned about the basic properties of Boolean variables, and a simple method to design efficient circuits to realize Boolean functions. An extensive discussion on Boolean logic or optimal circuit synthesis is beyond the scope of this book. Interested readers can refer to seminal texts by Kohavi [Kohavi and Jha, 2009] and [Micheli, 1994].

Nevertheless, we are at a position to appreciate the nature of Boolean circuits. Up till now, we have not assigned a meaning to sets of bits. We shall now see that sequences of bits can represent integers, floating point numbers, and strings(pieces of text). Arithmetic operations on such sequences of bits are described in detail in Chapter 8.