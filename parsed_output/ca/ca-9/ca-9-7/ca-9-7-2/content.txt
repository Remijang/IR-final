9.7.2 Functional Unit Arguments

We augment the read bus to carry the arguments for the functional units (referred to as  ). These arguments specify the nature of the operation, which the functional unit needs to perform. For example, the two operations associated with the memory unit are  , and  , and the two operations associated with the register file are  and  . Each ALU operation also has its separate code.

We propose to encode each operation in binary, and reserve the special value of 0 to indicate that no operation needs to be performed. Each functional unit needs to be connected to the read bus, and needs to process the value of the arguments. The  field can be split into two parts:  , and  . The  specifies the identifier for the functional unit. For example, we can assign 00 to the ALU, 01 to the register file, and 10 to the memory unit. The  contains the details of the operation to be performed. This is specific to the functional unit. We propose a 10-bit  bus that is a part of the read bus. We devote 3 bits to the  , and 7 bits to the  . Thus, for each unit we can support 128 different operations. Implementing the circuit to process the  is easy, and we leave it as an exercise to the reader.