[
    {
        "type": "text",
        "text": "9.5.1 Fetch Unit ",
        "text_level": 1,
        "page_idx": 384
    },
    {
        "type": "image",
        "img_path": "images/e392b3f3efbaebd95e7521ab4ae21d0c8fb21c7941837b68d017d10ed1afd066.jpg",
        "img_caption": [
            "Figure 9.17: The fetch unit in a microprogrammed processor "
        ],
        "img_footnote": [],
        "page_idx": 384
    },
    {
        "type": "text",
        "text": "Let us start out by explaining the design philosophy of the microprogrammed processor. We add registers with every unit. These registers store the input data for the specific unit, and a dedicated output register stores the results generated by the unit. Both these sets of registers are connected to the common bus. Unlike the hardwired processor, where there was a good amount of coupling across different units, units in a microprogrammed processor are fairly independent of each other. Their/ job is to perform a set of actions, and put the results back on to the bus. Each unit is like a function in a programming language. It has an interface consisting of a set of registers to read data in. It typically takes 1 cycle to compute its output, and then the unit writes the output value to an output register. ",
        "page_idx": 384
    },
    {
        "type": "text",
        "text": "In concordance with this philosophy, we present the design of the fetch unit in Figure 9.17. It has two registers \u2013 pc (PC), and ir (instruction register). We shall use the acronym, IR, for the instruction register. ir contains the contents of the instruction. The pc register can read its value from the bus, and can also write its value to the bus. We have not connected $_ { i r }$ to the bus because no other unit is typically interested in the exact contents of the instruction. Other units are only interested in different fields of the instruction. Hence, it is necessary to decode the instruction and break it into a set of different fields. This is done by the decode unit. ",
        "page_idx": 384
    }
]