11.2.7 Putting all the Pieces Together Cache Read Operation

The sequence of steps in a cache read operation is shown in Figure 11.12. We start with a lookup operation. As mentioned in Section 11.2.2, we can have a partial overlap between the lookup and data read operations. If there is a cache hit, then the cache returns the value to the processor, or the higher level cache (whichever might be the case). However, if there is a cache miss, then we need to cancel the data read operation, and send a request to the lower level cache. The lower level cache will perform the same sequence of accesses, and return the entire cache block (not just 4 bytes). The cache controller can then extract the requested data from the block, and send it to the processor. Simultaneously, the cache controller invokes the insert operation to insert the block into the cache. If there is an invalid entry in the set, then we can replace it with the given block. However, if all the ways in a set are valid, it is necessary to invoke the replace operation to find a candidate for replacement. The figure appends a question mark with this operation, because this operation is not invoked all the time (only when all the ways of a set contain valid data). Then, we need to evict the block, and possibly write it to the lower level cache if the line is modified, and we are using a write-back cache. The cache controller then invokes the insert operation. This time it is guaranteed to be successful.

Cache Write Operation (write-back Cache)

Figure 11.13 shows the sequence of operations for a cache write operation for a write-back cache. The sequence of operations is roughly similar to that of a cache read. If there is a cache hit, then we invoke a data write operation, and set the modified bit to 1. Otherwise, we issue a read request for the block to the lower level cache. After the block arrives, most cache controllers typically store it in a small temporary buffer. At this point, we write the 4 bytes (that we are interested in) to the buffer, and return. In some processors, the cache controller might wait till all the sub-operations complete. After writing into the temporary buffer (write block operation in Figure 11.13), we invoke the insert operation for writing the contents (modified) of the block. If this operation is not successful (because all the ways are valid), then we follow the same sequence of steps as the read operation (replace, evict, and insert).

Cache Write Operation (write-through Cache)

Figure 11.14 shows the sequence of operations for a write-through cache. The first point of difference is that we write the block to the lower level, even if the request hits in the cache. The second point of difference is that after we write the value into the temporary buffer (after a miss), we write back the new contents of the block to the lower level cache also. The rest of the steps are similar to the sequence of steps that we followed for the write-back cache.