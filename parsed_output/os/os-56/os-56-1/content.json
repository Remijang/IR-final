[
    {
        "type": "text",
        "text": "56.1 Introduction ",
        "text_level": 1,
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "In previous chapters, we’ve discussed clarifying your security goals, determining your security policies, using authentication mechanisms to identify principals, and using access control mechanisms to enforce policies concerning which principals can access which computer resources in which ways. While we identified a number of shortcomings and problems inherent in all of these elements of securing your system, if we regard those topics as covered, what’s left for the operating system to worry about, from a security perspective? Why isn’t that everything? ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "There are a number of reasons why we need more. Of particular importance: not everything is controlled by the operating system. But perhaps you respond, you told me the operating system is all-powerful! Not really. It has substantial control over a limited domain – the hardware on which it runs, using the interfaces of which it is given control. It has no real control over what happens on other machines, nor what happens if one of its pieces of hardware is accessed via some mechanism outside the operating system’s control. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "But how can we expect the operating system to protect something when the system does not itself control access to that resource? The answer is to prepare the resource for trouble in advance. In essence, we assume that we are going to lose the data, or that an opponent will try to alter it improperly. And we take steps to ensure that such actions don’t cause us problems. The key observation is that if an opponent cannot understand the data in the form it is obtained, our secrets are safe. Further, if the attacker cannot understand it, it probably can’t be altered, at least not in a controllable way. If the attacker doesn’t know what the data means, how can it be changed into something the attacker prefers? ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "The core technology we’ll use is cryptography, a set of techniques to convert data from one form to another, in controlled ways with expected outcomes. We will convert the data from its ordinary form into another form using cryptography. If we do it right, the opponent will not be able to determine what the original data was by examining the protected form. ",
        "page_idx": 0
    },
    {
        "type": "text",
        "text": "Of course, if we ever want to use it again ourselves, we must be able to reverse that transformation and return the data to its ordinary form. That must be hard for the opponent to do, as well. If we can get to that point, we can also provide some protection for the data from alteration, or, more precisely, prevent opponents from altering the data to suit their desires, and even know when opponents have tampered with our data. All through the joys of cryptography! ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "But using cryptography properly is not easy, and many uses of cryptography are computationally expensive. So we need to be selective about where and when we use cryptography, and careful in how we implement it and integrate it into our systems. Well chosen uses that are properly performed will tremendously increase security. Poorly chosen uses that are badly implemented won’t help at all, and may even hurt. ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "THE CRUX OF THE PROBLEM: ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "HOW TO PROTECT INFORMATION OUTSIDE THE OS’S DOMAIN ",
        "page_idx": 1
    },
    {
        "type": "text",
        "text": "How can we use cryptography to ensure that, even if others gain access to critical data outside the control of the operating system, they will be unable to either use or alter it? What cryptographic technologies are available to assist in this problem? How do we properly use those technologies? What are the limitations on what we can do with them? ",
        "page_idx": 1
    }
]