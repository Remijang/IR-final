[
    {
        "type": "text",
        "text": "20.4 Inverted Page Tables ",
        "text_level": 1,
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "An even more extreme space savings in the world of page tables is found with inverted page tables. Here, instead of having many page tables (one per process of the system), we keep a single page table that has an entry for each physical page of the system. The entry tells us which process is using this page, and which virtual page of that process maps to this physical page. ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "Finding the correct entry is now a matter of searching through this data structure. A linear scan would be expensive, and thus a hash table is often built over the base structure to speed up lookups. The PowerPC is one example of such an architecture [JM98]. ",
        "page_idx": 12
    },
    {
        "type": "text",
        "text": "More generally, inverted page tables illustrate what weâ€™ve said from the beginning: page tables are just data structures. You can do lots of crazy things with data structures, making them smaller or bigger, making them slower or faster. Multi-level and inverted page tables are just two examples of the many things one could do. ",
        "page_idx": 12
    }
]