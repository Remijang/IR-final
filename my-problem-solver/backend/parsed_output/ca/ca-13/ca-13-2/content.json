[
    {
        "type": "text",
        "text": "13.2 Physical Layer \u2013 Transmission Sublayer ",
        "text_level": 1,
        "page_idx": 652
    },
    {
        "type": "text",
        "text": "The physical layer is the lower most layer of the I/O system. This layer is concerned with the physical transmission of signals between the source and receiver. Let us divide the physical layer into two sublayers. Let us call the first sublayer as the transmission sublayer because it deals with the transmission of bits from the source to the destination. This layer is concerned with the electrical properties of the links (voltage, resistance, capacitance), and the methods of representing a logical bit (0 or 1) using electrical signals. ",
        "page_idx": 652
    },
    {
        "type": "image",
        "img_path": "images/f37dc6b768a35a69ec6b0521ec4228c1c7293d48c64d41ea46280aaf04999607.jpg",
        "img_caption": [
            "Figure 13.5: The 4 layers of the $\\mathrm { I } / \\mathrm { O }$ system "
        ],
        "img_footnote": [],
        "page_idx": 653
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 653
    },
    {
        "type": "text",
        "text": "Let us refer to the second sublayer as the synchronization sublayer. This sublayer is concerned with reading an entire frame of bits from the physical link. Here, a frame is defined as a group of bits demarcated by special markers. Since I/O channels are plagued with jitter (unpredictable signal propagation time), it is necessary to properly synchronize the arrival of data at the receiver, and read each frame correctly. ",
        "page_idx": 653
    },
    {
        "type": "text",
        "text": "In this section, we shall discuss the transmission sublayer. We shall discuss the synchronization sublayer in the next section. ",
        "page_idx": 653
    },
    {
        "type": "text",
        "text": "Note that the reason that we create multiple sublayers, instead of creating multiple layers is because sublayers need not be independent of each other. However, in general layers should be independent of each other. It should be theoretically possible to use any physical layer, with any other data link layer protocol. They should ideally be completely oblivious of each other. In this case, the transmission and synchronization sublayers have strong linkages, and thus it is not possible to separate them into separate layers. ",
        "page_idx": 653
    },
    {
        "type": "image",
        "img_path": "images/ab2c0d76816acdd78e6f8e457419c2e8987f563d1b3866034721c86571f47f73.jpg",
        "img_caption": [
            "Figure 13.6: A generic view of an I/O link "
        ],
        "img_footnote": [],
        "page_idx": 653
    },
    {
        "type": "text",
        "text": "Figure 13.6 shows the generic view of an I/O link. The source (transmitter) sends a sequence of bits to the destination (receiver). At the time of transmission, the data is always synchronized with respect to the clock of the source. This means that if the source runs at 1 GHz, then it sends bits at the rate of 1 GHz. Note that the frequency of the source is not necessarily equal to the frequency of the processor, or I/O element that is sending the data. The transmission circuitry, is typically a separate submodule, which has a clock that is derived from the clock of the module that it is a part of. For example, the transmission circuitry of a processor might be transmitting data at 500 MHz, whereas the processor might be running at 4 GHz. In any case, we assume that the transmitter transmits data at its internal clock rate. This clock rate is also known as the frequency of the bus, or bus frequency , and this frequency is in general lower than the clock frequency of the processors, or other chips in the chipset. The receiver can run at the same frequency, or can use a faster frequency. Unless explicitly stated, we do not assume that the source and destination have the same frequency. Lastly, note that we shall use the terms sender, source, and transmitter interchangeably. Likewise, we shall use the terms destination, and receiver interchangeably. ",
        "page_idx": 653
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 654
    }
]