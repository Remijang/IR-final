[
    {
        "type": "text",
        "text": "10.3.3 EX Stage ",
        "text_level": 1,
        "page_idx": 420
    },
    {
        "type": "image",
        "img_path": "images/0d216bf7406ee99617e83421c27e534513bfe9a13977b971e3e74cf4efa2b213.jpg",
        "img_caption": [
            "Figure 10.6: The EX stage in a pipelined processor "
        ],
        "img_footnote": [],
        "page_idx": 420
    },
    {
        "type": "text",
        "text": "Let us now take a look at the EX stage in Figure 10.6. The ALU receives its inputs( $A$ and $B$ ) from the OF-EX pipeline register. The results generated by this stage are the aluResult (result of the ALU operation), the final branch target, and the branch outcome. The branch outcome is 1, if the branch is taken, otherwise it is 0. The result of the ALU operation is added to the instruction packet, and saved in the EX-MA register. The EX-MA register also contains the rest of the fields of the instruction packet namely the PC, instruction (contents of the instruction), control signals, and the second operand read from the register file (op2). ",
        "page_idx": 420
    },
    {
        "type": "text",
        "text": "For computing the final branch target, we need to choose between the branch target computed in the OF stage and the value of the return address register (possibly stored in $A$ ). The result of the choice is the final branch target(branchP C), and this is sent to the fetch unit. The branch unit computes the value of the signal, isBranchT aken. If it is 1, then the instruction is a branch, and it is taken. Otherwise, the fetch unit needs to use the default option of fetching the next PC. ",
        "page_idx": 420
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 421
    }
]