[
    {
        "type": "text",
        "text": "6.4.5 Floating Point Comparison Instructions ",
        "text_level": 1,
        "page_idx": 252
    },
    {
        "type": "text",
        "text": "Comparing floating point numbers is not the same as comparing integers. They cannot be directly given as arguments to conditional branch instructions. In this case, the status of the comparison needs to be stored in an integer register. This register can then be compared with the zero register using a regular conditional branch instruction. ",
        "page_idx": 252
    },
    {
        "type": "text",
        "text": "Table 6.18 shows the three floating point comparison instructions that store the result in an integer register. Let us explore their usage using an example (Example 118). ",
        "page_idx": 252
    },
    {
        "type": "text",
        "text": "Example 118 First, initialize $a 0 = 0$ , then set $a 0 = 1 7$ if $e < \\pi$ . ",
        "page_idx": 252
    },
    {
        "type": "text",
        "text": "Answer: ",
        "text_level": 1,
        "page_idx": 252
    },
    {
        "type": "text",
        "text": "pi: . float 3.14   \ne: . float 2.72   \n. main : la a1 , pi # load pi flw fs1 , 0( a1) la a2 , e # load e flw fs2 , 0( a2) add a0 , zero , zero # $\\alpha _ { } 0 = 0$ flt .s t0 , fs2 , fs1 # compare pi and e beq t0 , zero , .end # if ( $^ { \\prime } t O = 0 ,$ \uff09 jump to .end addi a0 , zero , 17 # a0 = 17 because t0 == 1   \n.end: ",
        "page_idx": 252
    }
]