[
    {
        "type": "text",
        "text": "RISC-V Assembly Language ",
        "text_level": 1,
        "page_idx": 227
    },
    {
        "type": "text",
        "text": "In this chapter, we will introduce the RISC-V assembly language, which is newer than ARM and x86. The ISA has a very interesting history. There are both legal and technical reasons for designing a new RISC ISA as late as 2010. Recall that ISA design was considered to be a dead area long before. Furthermore, a massive SW-HW ecosystem is needed to sustain an ISA, which is hard to design from scratch. Nevertheless, there was a requirement in 2010 for a RISC ISA that could be freely used by everybody and incorporated a lot of the technical know-how that had been generated in the past two decades of computer architecture research. ",
        "page_idx": 227
    },
    {
        "type": "text",
        "text": "Any modern ISA should be compatible with all kinds of devices starting from IoT devices to mobile phones to laptops to servers. Many of these devices didn\u2019t exist when conventional ISAs were designed. This means that it should have 32, 64 and 128-bit variants, support a relatively larger number of registers, and have extensive support for atomics and floating point numbers. ",
        "page_idx": 227
    },
    {
        "type": "text",
        "text": "Let us understand the situation that prevailed in 2010. Designing a simple RISC processor had become relatively very easy. The architectures were well understood, EDA tools were reasonably mature and enough computational power was available to even amateur designers. Hence, putting together a small RISC core became feasible for fabless companies and academic groups. It is important to note that circa 2010, there was a widespread consensus that RISC is the way to go for new cores and x86-like CISC ISAs were not an option. This is because of the $1 0 0 0 +$ instructions in CISC ISAs and the resulting decoding complexity. Decoders are power hungry and given that these ISAs were meant to run on low-power embedded systems, a CISC ISA was not a feasible option. ",
        "page_idx": 227
    },
    {
        "type": "text",
        "text": "However, just designing a RISC processor is not enough. It needs to be fabricated as well. A lot of chip fabrication companies (fabs) increased their capacity at that time, and it also became possible to design reasonably high-performance chips at older technology nodes. Hence, fabrication became quite inexpensive. Along with these technology-level tailwinds, many fabless companies rapidly came up in different parts of the world. They either wanted to design their bespoke processors or wanted to integrate their custom cores with third-party accelerators in SoCs. They always had an option to use or modify existing RISC cores designed by ARM and MIPS or design their own processors that are compatible with their ISAs. The advantage of using existing technologies is that their toolchain can be used. This includes the compilers, operating systems, libraries and binutils. ",
        "page_idx": 227
    },
    {
        "type": "text",
        "text": "",
        "page_idx": 228
    },
    {
        "type": "text",
        "text": "Despite so much of software support, many processor developers decided to forego the advantages of using existing ISAs primarily for legal reasons. There were a fair amount of restrictions and licensing requirements for using such legacy ISAs while even designing new processors from scratch. Furthermore, licensing their cores and using them in SoCs was also proving to be an expensive proposition to many developers. There was thus a need to create a new ISA from scratch and also create the full ecosystem to support it. The idea was to have extremely lenient licensing requirements such that the barrier to entry is reduced to a minimum. ",
        "page_idx": 228
    },
    {
        "type": "text",
        "text": "In 2010, the RISC-V project began in Berkeley. It was initially supported by various academic groups. Later on the RISC-V technical documents were released under a Creative Commons license in 2015. Currently, the RISC-V foundation maintains this ISA and publishes regular updates. ",
        "page_idx": 228
    }
]