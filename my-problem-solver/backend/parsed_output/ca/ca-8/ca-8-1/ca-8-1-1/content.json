[
    {
        "type": "text",
        "text": "8.1.1 Addition of Two 1-bit Numbers ",
        "text_level": 1,
        "page_idx": 307
    },
    {
        "type": "text",
        "text": "Let us look at the problem of adding two 1-bit numbers, $a$ and $b$ . Both $a$ and $b$ can take two values \u2013 0 or 1. Hence, there are four possible combinations of $a$ and $b$ . Their sum in binary can be either 00, 01, or 10. Their sum will be 10, when both $a$ and $b$ are 1. We should make an important observation here. The sum of two 1-bit numbers might potentially be two bits long. Let us call the LSB of the result as the sum, and the MSB as the carry. We can relate this concept to standard primary school addition of two 1 digit decimal numbers. If we are adding ",
        "page_idx": 307
    },
    {
        "type": "text",
        "text": "8 and 9, then the result is 17. We say that the sum is 7, and the carry is 1. Similarly, if we add   \n3 and 4, then the result is 7. We say that the sum is 7, and the carry is 0. ",
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "We can extend the concept of sum and carry to adding three 1-bit numbers also. If we are adding three 1-bit numbers then the range of the result is between 00 and 11 in binary. In this case also, we call the LSB as the sum, and the MSB as the carry. ",
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "Definition 52 ",
        "text_level": 1,
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "sum The sum is the LSB of the result of adding two or three 1-bit numbers. ",
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "carry The carry is the MSB of the result of adding two or three 1-bit numbers. ",
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "For an adder that can add two 1-bit numbers, there will be two output bits \u2013 a sum $s$ and a carry $c$ . An adder that adds two bits is known as a half adder. The truth table of a half adder is shown in Table 8.1. ",
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "Definition 53 ",
        "text_level": 1,
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "$A$ half adder adds two bits to produce a sum and a carry. ",
        "page_idx": 308
    },
    {
        "type": "table",
        "img_path": "images/d2e74779de794bc6bc5c7a195b07a3b3d1eb37cfb676572c484a0fa0b7efec21.jpg",
        "table_caption": [],
        "table_footnote": [],
        "table_body": "\n\n<html><body><table><tr><td></td><td>a</td><td>b</td><td>S</td><td>C</td></tr><tr><td>0 0 1</td><td>1 1</td><td>0 1 0</td><td>0 1 1</td><td>0 0 0</td></tr></table></body></html>\n\n",
        "page_idx": 308
    },
    {
        "type": "text",
        "text": "From the truth table, we can conclude that $s = a \\oplus b = \\overline { { a } } . b + a . \\overline { { b } }$ , where $\\oplus$ stands for exclusive or, \u2018.\u2019 stands for boolean AND, and \u2018 $+ ^ { , }$ stands for boolean OR. Secondly, $c = a . b$ . The circuit diagram of a half adder is shown in Figure 8.1. As we can see, a half adder is a very simple structure, and we have constructed it using just six gates in Figure 8.1. ",
        "page_idx": 308
    }
]