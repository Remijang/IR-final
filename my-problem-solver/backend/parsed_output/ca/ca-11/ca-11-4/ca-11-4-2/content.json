[
    {
        "type": "text",
        "text": "11.4.2 The \u201cOverlap\u201d and \u201cSize\u201d Problems ",
        "text_level": 1,
        "page_idx": 548
    },
    {
        "type": "text",
        "text": "Let us summarize all our discussion up till now. We basically want to solve two problems. ",
        "page_idx": 548
    },
    {
        "type": "text",
        "text": "Overlap Problem Programmers and compilers write a program assuming that they own the entire memory space, and they can write to any location at will. Unfortunately, the same assumption is made by all processes that are simultaneously active. Unless steps are taken, they may end up inadvertently writing to each other\u2019s memory space and corrupting each other\u2019s data. In fact, given that they use the same memory map, the chances of this happening in a naive system are extremely high. The hardware somehow needs to ensure that different processes are isolated from each other. This is the overlap problem. ",
        "page_idx": 548
    },
    {
        "type": "text",
        "text": "Size Problem Occasionally we need to run processes that require more memory than the available physical memory. It is desirable if some space in other storage media such as the hard disk can be repurposed for storing the memory footprint of a process. This is known as the size problem. ",
        "page_idx": 548
    },
    {
        "type": "text",
        "text": "Any implementation of virtual memory needs to effectively solve the size and overlap problems. ",
        "page_idx": 548
    }
]